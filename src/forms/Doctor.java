/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sunny
 */
public class Doctor extends javax.swing.JFrame {
    
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    /**
     * Creates new form ManageDoctor
     */
    public Doctor() {
        initComponents();
        conn=javaMySqlConnect.ConnectDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtDocID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtDocEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDocContact = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDocProfile = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDocAddress = new javax.swing.JTextField();
        btnAddDoc = new javax.swing.JButton();
        btnDeleteDoc = new javax.swing.JButton();
        btnUpdateDoc = new javax.swing.JButton();
        btnClearDoc = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        cmbDocDept = new javax.swing.JComboBox<>();
        txtDocPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Doctor-Hospital Manager");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel6.setBackground(java.awt.Color.white);
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DOCTOR MANAGER", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18), java.awt.Color.darkGray)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setForeground(java.awt.Color.darkGray);
        jLabel8.setText("Doc. ID");

        txtDocID.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        txtDocID.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setForeground(java.awt.Color.darkGray);
        jLabel9.setText("Doctor Name");

        txtDocName.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDoctor);

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setForeground(java.awt.Color.darkGray);
        jLabel10.setText("Email");

        txtDocEmail.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setForeground(java.awt.Color.darkGray);
        jLabel11.setText("Contact");

        txtDocContact.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setForeground(java.awt.Color.darkGray);
        jLabel12.setText("Profile");

        txtDocProfile.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel13.setForeground(java.awt.Color.darkGray);
        jLabel13.setText("Department");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setForeground(java.awt.Color.darkGray);
        jLabel14.setText("Address");

        txtDocAddress.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        btnAddDoc.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnAddDoc.setForeground(java.awt.Color.darkGray);
        btnAddDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addnew.png"))); // NOI18N
        btnAddDoc.setText("Add");
        btnAddDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDocActionPerformed(evt);
            }
        });

        btnDeleteDoc.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnDeleteDoc.setForeground(java.awt.Color.darkGray);
        btnDeleteDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        btnDeleteDoc.setText("Delete");
        btnDeleteDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDocActionPerformed(evt);
            }
        });

        btnUpdateDoc.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnUpdateDoc.setForeground(java.awt.Color.darkGray);
        btnUpdateDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdateDoc.setText("Update");
        btnUpdateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDocActionPerformed(evt);
            }
        });

        btnClearDoc.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnClearDoc.setForeground(java.awt.Color.darkGray);
        btnClearDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnClearDoc.setText("Clear");
        btnClearDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearDocActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel15.setForeground(java.awt.Color.darkGray);
        jLabel15.setText("Password");

        cmbDocDept.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        txtDocPassword.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel10)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDocPassword)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDocID, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                    .addComponent(txtDocProfile))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDocDept, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtDocAddress)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(265, 265, 265)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txtDocEmail)
                                        .addGap(19, 19, 19)))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDocContact, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                                    .addComponent(txtDocName)))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddDoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteDoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateDoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearDoc))))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddDoc, btnClearDoc, btnDeleteDoc, btnUpdateDoc});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtDocContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(cmbDocDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDoc)
                    .addComponent(btnDeleteDoc)
                    .addComponent(btnUpdateDoc)
                    .addComponent(btnClearDoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(909, 657));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //Program to get Doctor data and load count from 
    public void loadCount(){
        try{
            String sql="Select * from doctor";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            int docID=1;
            while(rs.next()){
                docID=Integer.parseInt(rs.getString("doc_ID"));
                docID++;
            }
            txtDocID.setText(String.valueOf(docID));
            txtDocName.setText("");
            txtDocEmail.setText("");
            txtDocContact.setText("");
            txtDocAddress.setText("");
            txtDocProfile.setText("");
            txtDocPassword.setText("");
            //tblDoctor.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
        }   
        catch(SQLException | NumberFormatException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    //Program to load Doctor List
    public void loadDocList(){
        try{
            String sql="Select * from doctor";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            tblDoctor.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
        }   
        catch(SQLException | NumberFormatException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    //Program to populate Department Combobox
    public void getDept(){
        try{
            String sql="Select * from department";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            cmbDocDept.removeAllItems();
            cmbDocDept.addItem("--Select Department--");
            while(rs.next()){
                cmbDocDept.addItem(rs.getString("dept_Name"));
            }
            pst.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private static Doctor obj=null;
    public static Doctor getObj(){
        if(obj==null){
            obj=new Doctor();
        }
        return obj;
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadCount();
        loadDocList();
        getDept();
    }//GEN-LAST:event_formWindowOpened
    //Program to add Doctor to database
    public void addDoctor(){
        if(!"".equals(txtDocName.getText()) && !"".equals(txtDocProfile.getText()) && !"".equals(txtDocEmail.getText()) && !"".equals(txtDocContact.getText()) && !"".equals(txtDocAddress.getText()) && !"".equals(txtDocPassword.getText()) && !"".equals(cmbDocDept.getSelectedItem())){
            try{
                String sql="Insert into doctor (doc_id,doc_Name,doc_Email,doc_Contact,doc_Profile,doc_Department,doc_Address,doc_Password)values(?,?,?,?,?,?,?,?)";
                pst=conn.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(txtDocID.getText()));
                pst.setString(2, txtDocName.getText());
                pst.setString(3, txtDocEmail.getText());
                pst.setString(4, txtDocContact.getText());
                pst.setString(5, txtDocProfile.getText());
                pst.setString(6, cmbDocDept.getSelectedItem().toString());
                pst.setString(7, txtDocAddress.getText());
                pst.setString(8, txtDocPassword.getText());
                pst.execute();
                pst.close();
                JOptionPane.showMessageDialog(null, "Data saved.");
                loadCount();
                loadDocList();
            }
            catch(SQLException | NumberFormatException e){
               JOptionPane.showMessageDialog(null, "Data with same Doc. ID already exist. Press [Clear] to get new Doc. ID.");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Empty data cannot be saved.");
        }
    }
    private void btnAddDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDocActionPerformed
        // TODO add your handling code here:
        addDoctor();
    }//GEN-LAST:event_btnAddDocActionPerformed
    //Program to Delete Doctor
    public void deleteDoctor(){
        if(!"".equals(txtDocID.getText())){
            try{
                String sql="Delete from doctor where doc_ID='"+txtDocID.getText()+"'";
                pst=conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data deleted from database.");
                loadCount();
                loadDocList();
            }
            catch(SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Doctor record does not exist.");
        }
        
    }
    private void btnDeleteDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDocActionPerformed
        // TODO add your handling code here:
        deleteDoctor();
    }//GEN-LAST:event_btnDeleteDocActionPerformed
    //Program to populate fields on table click
    public void getDocFromTable(){
        try{
            int row=tblDoctor.getSelectedRow();
            String tblClick=tblDoctor.getModel().getValueAt(row, 0).toString();
            String sql="Select * from doctor where doc_ID='"+tblClick+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                txtDocID.setText(rs.getString("doc_ID"));
                txtDocName.setText(rs.getString("doc_Name"));
                txtDocEmail.setText(rs.getString("doc_Email"));
                txtDocContact.setText(rs.getString("doc_Contact"));
                txtDocProfile.setText(rs.getString("doc_Profile"));
                cmbDocDept.setSelectedItem(rs.getString("doc_Department"));
                txtDocAddress.setText(rs.getString("doc_Address"));
                txtDocPassword.setText(rs.getString("doc_Password"));
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }      
    }
    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        // TODO add your handling code here:
        getDocFromTable();
    }//GEN-LAST:event_tblDoctorMouseClicked
    //Program to update Doctor Table
    public void updateDoctor(){
        try{
            String sql="Update doctor set doc_Name=?, doc_Email=?, doc_Contact=?, doc_Profile=?, doc_Department=?, doc_Address=?, doc_Password=? where doc_ID='"+txtDocID.getText()+"'";
            pst=conn.prepareStatement(sql);
            pst.setString(1, txtDocName.getText());
            pst.setString(2, txtDocEmail.getText());
            pst.setString(3, txtDocContact.getText());
            pst.setString(4, txtDocProfile.getText());
            pst.setString(5, cmbDocDept.getSelectedItem().toString());
            pst.setString(6, txtDocAddress.getText());
            pst.setString(7, txtDocPassword.getText());
            pst.execute();
            pst.close();
            JOptionPane.showMessageDialog(null, "Data updated on database");
            loadCount();
            loadDocList();
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void btnUpdateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDocActionPerformed
        // TODO add your handling code here:
        updateDoctor();
    }//GEN-LAST:event_btnUpdateDocActionPerformed

    private void btnClearDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearDocActionPerformed
        // TODO add your handling code here:
        loadCount();
        loadDocList();
    }//GEN-LAST:event_btnClearDocActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDoc;
    private javax.swing.JButton btnClearDoc;
    private javax.swing.JButton btnDeleteDoc;
    private javax.swing.JButton btnUpdateDoc;
    private javax.swing.JComboBox<String> cmbDocDept;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtDocAddress;
    private javax.swing.JTextField txtDocContact;
    private javax.swing.JTextField txtDocEmail;
    private javax.swing.JTextField txtDocID;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtDocPassword;
    private javax.swing.JTextField txtDocProfile;
    // End of variables declaration//GEN-END:variables
}
